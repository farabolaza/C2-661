{
  "hash": "2b9ee2097ff92925721338ca238921ef",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"09 Arduino 01\"\nformat: \n    html: \n        toc: true\n        number-sections: true\n        html-math-method: katex\njupyter: python3\n---\n\n\n\n\n# Ojbetivos de la clase\n\n-   [ ] Placa arduino\n    -   [ ] Pines Entradas analógicas\n    -   [ ] Pines digitales\n        -   [ ] Entradas digitales\n        -   [ ] Salida digitales\n-   [ ] Arduino IDE\n-   [ ] Lenguaje arduino\n    -   [ ] Variables, estructuras, funciones y comentarios\n-   [ ] Modulación PWM\n-   [ ] Uso del led integrado\n-   [ ] Conexión de un LED\n    -   [ ] pwm\n\n# La placa Arduino\n\nLa placa Arduino permite la interacción entre el mundo físico y el digital mediante el uso de componentes electrónicos y sensores. No se trata de una única placa sino una familia de placas de software y hardware libe. De ésta familia utilizaremos la más usual, Arduino Uno (y sus clones).\n\n![placa arduino uno](arduino.webp){width=\"500\"}\n\n# Los entornos de trabajo\n\n## Arduino IDE\n\nEl software arduino IDE es el software que permite escribir el código y subirlo a la placa para su ejecución\n\n## Tinkercad\n\nEl sitio Tinkercad ofrece la posibilidad de escribir en el lenguaje Arduino y simular componente a componente un circuito entero, lo que es de mucha utilidad para practicar cuando se está comenzando o testeando un nuevo diseño.\n\n# El lenguaje de programación de Arduino\n\nArduino tiene su propio lenguaje de programación que está inspirado y replica en parte al lenguaje C++. Nosotros nos centraremos las estructuras de control más sencillas (que ya vimos para python) que resultan ser ligeramente diferentes en Arduino en cuanto a su sintaxis pero que hacen efectivamente lo mismo que sus parientes Pythonicas. Por su parte, el funcionamiento de la placa requiere de ciertas estructuras que se encuentran siempre presentes y son escenciales para su funcionamiento.\n\n## Referencia en línea del lenguaje arduino\n\nEn [ésta página](https://www.arduino.cc/reference/es/) tenemos acceso las funciones, estructurales y variables mas usuales de Arduino con su sintaxis y descripción.\n\n## Ejemplo\n\nVeamos un esqueleto de código de Arudino\n\n```c++\nvoid setup(){ // los bloque encerrados entre llaves\npinMode(13;OUTPUT); // los comentarios van precedidos por doble barra\n}\n\nvoid loop(){\nif (alguna condición)\n{ \n    // ejecuta esto; \n    // cada instrucción se finaliza con un punto y coma \n    // esto otro; \n    // esto otro; }\nelse if (otra condicion) {\n// haga esto otro;\n}\nelse { // ejecuta esta otra cosa; }\n}}}\n```       \n\n# Primeros pasos en Arduino\n\nVamos a seguir bastante la guía presente en [esta lista de Youtube](https://youtube.com/playlist?list=PLkjnQ3NFTPnY1eNyLDGi547gkVui1vyn2&si=M6fYpbgP-rITZw1M) por lo que si se pierden alguna clase o se olvidan de algo pueden volver a verlo.\n\n![Detalle de entradas y salidas](https://ibles-content.tinkercad.com/F2C/Z4TU/LEH47RIM/F2CZ4TULEH47RIM.png?width=1200&height=900&fit=bounds&auto=webp)\n\n### Conexión de un led\n\nUn diodo LED es un tipo especial de diodo. Los diodos son componentes electrónicos en cuyos detalles se profundizará en la materia **electrónica**. \nPor el momento sólo necesitamos saber que el diodo tiene polaridad: si lo conectamos al revés, no funciona.\nTiene un lado positivo o ánodo, y uno negativo, o cátodo. El esquemático mas usual es como se ve aquí abajo.\n\n![iu (598×402) (duckduckgo.com)](https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcursos.mcielectronics.cl%2Fwp-content%2Fuploads%2F2014%2F07%2Fdiodo.png&f=1&nofb=1&ipt=d459c863b44139e0ca9af10e3da3121618bd5ad54c0a3c962aa8605dd49456ef&ipo=images)\n\nEn la vida real, podemos ver la polaridad de un LED como se muestra debajo. El cátodo es la patita corta y el lado plano. En ocasiones las patitas son cortadas o no están visibles, por lo que:\n\n![un diodo](https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.geekfactory.mx%2Fwp-content%2Fuploads%2F2020%2F04%2Fled-con-arduino-como-determinar-polaridad.jpg&f=1&nofb=1&ipt=6db7be7c736b3ab2ff5f755987c0239c3914991c3020f68d55a72556c4da61c8&ipo=images)\n\nVersión esquemática de la placa con la conexión actual\n\n![simplefade_bb.png (1920×1080) (arduino.cc)](https://docs.arduino.cc/static/d64f7f76fc5ba2668a1684d1d7583207/29114/simplefade_bb.png){width=\"600\"}\n\n\nPueden probar este código con la conexión anterior:\n\n```c++\nint pinPWM = 10\n\nvoid setup(){\n    pinMode(pinPWM,OUTPUT);\n}\nvoid loop(){\n    for(i=0;i<=255;i++){\n    analogWrite(pinPWM,i);\n    delay(1000);\n    }\n}\n```\n\n¿Qué se podría cambiar en el código para que la iluminación progresiva sea \"ida y vuelta\", \nes decir, de apagado a prendido y de prendido a apagado.\n\n## Referencias\n\n- [Arduino Hardware Arduino](https://www.arduino.cc/en/hardware) \n- [Arduino Reference - Arduino Reference](https://www.arduino.cc/reference/en/) \n- [Curso de arduino](https://youtube.com/playlist?list=PLkjnQ3NFTPnY1eNyLDGi547gkVui1vyn2&si=4VGzMiUyuoBzNvuT) \n- [Curso de arduino 2](https://youtube.com/playlist?list=PLEzmH7aN82FEh2JjYuNCvFu6wFolHai32&si=103_cDcPluovnGBo) \n- [Fading a LED | Arduino Documentation](https://docs.arduino.cc/built-in-examples/basics/Fade)\n- [TinkerCad de esta clase](https://www.tinkercad.com/classrooms/3MFQhBZ2UnU/activities)\n- [Intro a Arduino de TinkerCad](https://www.tinkercad.com/projects/Basics-of-Arduino-TINKERCAD)\n- [Drivers para Placas alternativas](https://github.com/himalayanelixir/arduino-usb-drivers)\n\n",
    "supporting": [
      "09 Arduino 01_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}