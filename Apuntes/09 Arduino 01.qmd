---
title: "09 Arduino 01"
format: 
    html: 
        toc: true
        number-sections: true
        html-math-method: katex
jupyter: python3
---

# Ojbetivos de la clase

-   [ ] Placa arduino
    -   [ ] Pines Entradas analógicas
    -   [ ] Pines digitales
        -   [ ] Entradas digitales
        -   [ ] Salida digitales
-   [ ] Arduino IDE
-   [ ] Lenguaje arduino
    -   [ ] Variables, estructuras, funciones y comentarios
-   [ ] Modulación PWM
-   [ ] Uso del led integrado
-   [ ] Conexión de un LED
    -   [ ] pwm

# La placa Arduino

La placa Arduino permite la interacción entre el mundo físico y el digital mediante el uso de componentes electrónicos y sensores. No se trata de una única placa sino una familia de placas de software y hardware libe. De ésta familia utilizaremos la más usual, Arduino Uno (y sus clones).

![placa arduino uno](arduino.webp){width="500"}

# Los entornos de trabajo

## Arduino IDE

El software arduino IDE es el software que permite escribir el código y subirlo a la placa para su ejecución

## Tinkercad

El sitio Tinkercad ofrece la posibilidad de escribir en el lenguaje Arduino y simular componente a componente un circuito entero, lo que es de mucha utilidad para practicar cuando se está comenzando o testeando un nuevo diseño.

# El lenguaje de programación de Arduino

Arduino tiene su propio lenguaje de programación que está inspirado y replica en parte al lenguaje C++. Nosotros nos centraremos las estructuras de control más sencillas (que ya vimos para python) que resultan ser ligeramente diferentes en Arduino en cuanto a su sintaxis pero que hacen efectivamente lo mismo que sus parientes Pythonicas. Por su parte, el funcionamiento de la placa requiere de ciertas estructuras que se encuentran siempre presentes y son escenciales para su funcionamiento.

## Referencia en línea del lenguaje arduino

En [ésta página](https://www.arduino.cc/reference/es/) tenemos acceso las funciones, estructurales y variables mas usuales de Arduino con su sintaxis y descripción.

## Ejemplo

Veamos un esqueleto de código de Arudino

```c++
void setup(){ // los bloque encerrados entre llaves
pinMode(13;OUTPUT); // los comentarios van precedidos por doble barra
}

void loop(){
if (alguna condición)
{ 
    // ejecuta esto; 
    // cada instrucción se finaliza con un punto y coma 
    // esto otro; 
    // esto otro; }
else if (otra condicion) {
// haga esto otro;
}
else { // ejecuta esta otra cosa; }
}}}
```       

# Primeros pasos en Arduino

Vamos a seguir bastante la guía presente en [esta lista de Youtube](https://youtube.com/playlist?list=PLkjnQ3NFTPnY1eNyLDGi547gkVui1vyn2&si=M6fYpbgP-rITZw1M) por lo que si se pierden alguna clase o se olvidan de algo pueden volver a verlo.

### Conexión de un led

Un diodo LED es un tipo especial de diodo. Los diodos son componentes electrónicos en cuyos detalles se profundizará en la materia **electrónica**. 
Por el momento sólo necesitamos saber que el diodo tiene polaridad: si lo conectamos al revés, no funciona.
Tiene un lado positivo o ánodo, y uno negativo, o cátodo. El esquemático mas usual es como se ve aquí abajo.

![iu (598×402) (duckduckgo.com)](https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcursos.mcielectronics.cl%2Fwp-content%2Fuploads%2F2014%2F07%2Fdiodo.png&f=1&nofb=1&ipt=d459c863b44139e0ca9af10e3da3121618bd5ad54c0a3c962aa8605dd49456ef&ipo=images)

En la vida real, podemos ver la polaridad de un LED como se muestra debajo. El cátodo es la patita corta y el lado plano. En ocasiones las patitas son cortadas o no están visibles, por lo que:

![un diodo](https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.geekfactory.mx%2Fwp-content%2Fuploads%2F2020%2F04%2Fled-con-arduino-como-determinar-polaridad.jpg&f=1&nofb=1&ipt=6db7be7c736b3ab2ff5f755987c0239c3914991c3020f68d55a72556c4da61c8&ipo=images)

Versión esquemática de la placa con la conexión actual

![simplefade_pin9_schem.png (1920×1080) (arduino.cc)](https://docs.arduino.cc/static/de42b3d398cf40768c13508932428fdb/29114/simplefade_pin9_schem.png){width="500"}


Pueden probar este código con la conexión anterior:

```c++
int pinPWM = 10

void setup(){
    pinMode(pinPWM,OUTPUT);
}
void loop(){
    for(i=0;i<=255;i++){
    analogWrite(pinPWM,i);
    delay(1000);
    }
}
```

¿Qué se podría cambiar en el código para que la iluminación progresiva sea "ida y vuelta", 
es decir, de apagado a prendido y de prendido a apagado.

## Referencias

[Arduino Hardware Arduino](https://www.arduino.cc/en/hardware) 
[Arduino Reference - Arduino Reference](https://www.arduino.cc/reference/en/) 
[Curso de arduino](https://youtube.com/playlist?list=PLkjnQ3NFTPnY1eNyLDGi547gkVui1vyn2&si=4VGzMiUyuoBzNvuT) 
[Curso de arduino 2](https://youtube.com/playlist?list=PLEzmH7aN82FEh2JjYuNCvFu6wFolHai32&si=103_cDcPluovnGBo) 
[Fading a LED | Arduino Documentation](https://docs.arduino.cc/built-in-examples/basics/Fade)
[TinkerCad de esta clase](https://www.tinkercad.com/classrooms/3MFQhBZ2UnU/activities)